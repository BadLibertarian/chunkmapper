// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/chunkmapper/protoc/MineContainer.proto

package com.chunkmapper.protoc;

public final class MineContainer {
  private MineContainer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MineInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 absx = 1;
    /**
     * <code>required int32 absx = 1;</code>
     */
    boolean hasAbsx();
    /**
     * <code>required int32 absx = 1;</code>
     */
    int getAbsx();

    // required int32 absz = 2;
    /**
     * <code>required int32 absz = 2;</code>
     */
    boolean hasAbsz();
    /**
     * <code>required int32 absz = 2;</code>
     */
    int getAbsz();

    // repeated string commodities = 3;
    /**
     * <code>repeated string commodities = 3;</code>
     */
    java.util.List<java.lang.String>
    getCommoditiesList();
    /**
     * <code>repeated string commodities = 3;</code>
     */
    int getCommoditiesCount();
    /**
     * <code>repeated string commodities = 3;</code>
     */
    java.lang.String getCommodities(int index);
    /**
     * <code>repeated string commodities = 3;</code>
     */
    com.google.protobuf.ByteString
        getCommoditiesBytes(int index);
  }
  /**
   * Protobuf type {@code MineInfo}
   */
  public static final class MineInfo extends
      com.google.protobuf.GeneratedMessage
      implements MineInfoOrBuilder {
    // Use MineInfo.newBuilder() to construct.
    private MineInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MineInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MineInfo defaultInstance;
    public static MineInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MineInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MineInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              absx_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              absz_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                commodities_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              commodities_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          commodities_ = new com.google.protobuf.UnmodifiableLazyStringList(commodities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chunkmapper.protoc.MineContainer.internal_static_MineInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chunkmapper.protoc.MineContainer.internal_static_MineInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chunkmapper.protoc.MineContainer.MineInfo.class, com.chunkmapper.protoc.MineContainer.MineInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MineInfo> PARSER =
        new com.google.protobuf.AbstractParser<MineInfo>() {
      public MineInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MineInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MineInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 absx = 1;
    public static final int ABSX_FIELD_NUMBER = 1;
    private int absx_;
    /**
     * <code>required int32 absx = 1;</code>
     */
    public boolean hasAbsx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 absx = 1;</code>
     */
    public int getAbsx() {
      return absx_;
    }

    // required int32 absz = 2;
    public static final int ABSZ_FIELD_NUMBER = 2;
    private int absz_;
    /**
     * <code>required int32 absz = 2;</code>
     */
    public boolean hasAbsz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 absz = 2;</code>
     */
    public int getAbsz() {
      return absz_;
    }

    // repeated string commodities = 3;
    public static final int COMMODITIES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList commodities_;
    /**
     * <code>repeated string commodities = 3;</code>
     */
    public java.util.List<java.lang.String>
        getCommoditiesList() {
      return commodities_;
    }
    /**
     * <code>repeated string commodities = 3;</code>
     */
    public int getCommoditiesCount() {
      return commodities_.size();
    }
    /**
     * <code>repeated string commodities = 3;</code>
     */
    public java.lang.String getCommodities(int index) {
      return commodities_.get(index);
    }
    /**
     * <code>repeated string commodities = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCommoditiesBytes(int index) {
      return commodities_.getByteString(index);
    }

    private void initFields() {
      absx_ = 0;
      absz_ = 0;
      commodities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAbsx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAbsz()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, absx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, absz_);
      }
      for (int i = 0; i < commodities_.size(); i++) {
        output.writeBytes(3, commodities_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, absx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, absz_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < commodities_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(commodities_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getCommoditiesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.MineContainer.MineInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MineInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chunkmapper.protoc.MineContainer.MineInfo.class, com.chunkmapper.protoc.MineContainer.MineInfo.Builder.class);
      }

      // Construct using com.chunkmapper.protoc.MineContainer.MineInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        absx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        absz_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        commodities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineInfo_descriptor;
      }

      public com.chunkmapper.protoc.MineContainer.MineInfo getDefaultInstanceForType() {
        return com.chunkmapper.protoc.MineContainer.MineInfo.getDefaultInstance();
      }

      public com.chunkmapper.protoc.MineContainer.MineInfo build() {
        com.chunkmapper.protoc.MineContainer.MineInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.MineContainer.MineInfo buildPartial() {
        com.chunkmapper.protoc.MineContainer.MineInfo result = new com.chunkmapper.protoc.MineContainer.MineInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.absx_ = absx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.absz_ = absz_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          commodities_ = new com.google.protobuf.UnmodifiableLazyStringList(
              commodities_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.commodities_ = commodities_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chunkmapper.protoc.MineContainer.MineInfo) {
          return mergeFrom((com.chunkmapper.protoc.MineContainer.MineInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chunkmapper.protoc.MineContainer.MineInfo other) {
        if (other == com.chunkmapper.protoc.MineContainer.MineInfo.getDefaultInstance()) return this;
        if (other.hasAbsx()) {
          setAbsx(other.getAbsx());
        }
        if (other.hasAbsz()) {
          setAbsz(other.getAbsz());
        }
        if (!other.commodities_.isEmpty()) {
          if (commodities_.isEmpty()) {
            commodities_ = other.commodities_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCommoditiesIsMutable();
            commodities_.addAll(other.commodities_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAbsx()) {
          
          return false;
        }
        if (!hasAbsz()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.MineContainer.MineInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.MineContainer.MineInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 absx = 1;
      private int absx_ ;
      /**
       * <code>required int32 absx = 1;</code>
       */
      public boolean hasAbsx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 absx = 1;</code>
       */
      public int getAbsx() {
        return absx_;
      }
      /**
       * <code>required int32 absx = 1;</code>
       */
      public Builder setAbsx(int value) {
        bitField0_ |= 0x00000001;
        absx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 absx = 1;</code>
       */
      public Builder clearAbsx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        absx_ = 0;
        onChanged();
        return this;
      }

      // required int32 absz = 2;
      private int absz_ ;
      /**
       * <code>required int32 absz = 2;</code>
       */
      public boolean hasAbsz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 absz = 2;</code>
       */
      public int getAbsz() {
        return absz_;
      }
      /**
       * <code>required int32 absz = 2;</code>
       */
      public Builder setAbsz(int value) {
        bitField0_ |= 0x00000002;
        absz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 absz = 2;</code>
       */
      public Builder clearAbsz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        absz_ = 0;
        onChanged();
        return this;
      }

      // repeated string commodities = 3;
      private com.google.protobuf.LazyStringList commodities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCommoditiesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          commodities_ = new com.google.protobuf.LazyStringArrayList(commodities_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public java.util.List<java.lang.String>
          getCommoditiesList() {
        return java.util.Collections.unmodifiableList(commodities_);
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public int getCommoditiesCount() {
        return commodities_.size();
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public java.lang.String getCommodities(int index) {
        return commodities_.get(index);
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCommoditiesBytes(int index) {
        return commodities_.getByteString(index);
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public Builder setCommodities(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommoditiesIsMutable();
        commodities_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public Builder addCommodities(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommoditiesIsMutable();
        commodities_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public Builder addAllCommodities(
          java.lang.Iterable<java.lang.String> values) {
        ensureCommoditiesIsMutable();
        super.addAll(values, commodities_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public Builder clearCommodities() {
        commodities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string commodities = 3;</code>
       */
      public Builder addCommoditiesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommoditiesIsMutable();
        commodities_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MineInfo)
    }

    static {
      defaultInstance = new MineInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MineInfo)
  }

  public interface MineListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .MineInfo mines = 1;
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo> 
        getMinesList();
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    com.chunkmapper.protoc.MineContainer.MineInfo getMines(int index);
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    int getMinesCount();
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    java.util.List<? extends com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder> 
        getMinesOrBuilderList();
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder getMinesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MineList}
   */
  public static final class MineList extends
      com.google.protobuf.GeneratedMessage
      implements MineListOrBuilder {
    // Use MineList.newBuilder() to construct.
    private MineList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MineList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MineList defaultInstance;
    public static MineList getDefaultInstance() {
      return defaultInstance;
    }

    public MineList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MineList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                mines_ = new java.util.ArrayList<com.chunkmapper.protoc.MineContainer.MineInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              mines_.add(input.readMessage(com.chunkmapper.protoc.MineContainer.MineInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          mines_ = java.util.Collections.unmodifiableList(mines_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.chunkmapper.protoc.MineContainer.internal_static_MineList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.chunkmapper.protoc.MineContainer.internal_static_MineList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.chunkmapper.protoc.MineContainer.MineList.class, com.chunkmapper.protoc.MineContainer.MineList.Builder.class);
    }

    public static com.google.protobuf.Parser<MineList> PARSER =
        new com.google.protobuf.AbstractParser<MineList>() {
      public MineList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MineList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MineList> getParserForType() {
      return PARSER;
    }

    // repeated .MineInfo mines = 1;
    public static final int MINES_FIELD_NUMBER = 1;
    private java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo> mines_;
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    public java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo> getMinesList() {
      return mines_;
    }
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    public java.util.List<? extends com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder> 
        getMinesOrBuilderList() {
      return mines_;
    }
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    public int getMinesCount() {
      return mines_.size();
    }
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    public com.chunkmapper.protoc.MineContainer.MineInfo getMines(int index) {
      return mines_.get(index);
    }
    /**
     * <code>repeated .MineInfo mines = 1;</code>
     */
    public com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder getMinesOrBuilder(
        int index) {
      return mines_.get(index);
    }

    private void initFields() {
      mines_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getMinesCount(); i++) {
        if (!getMines(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < mines_.size(); i++) {
        output.writeMessage(1, mines_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mines_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.MineContainer.MineList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.MineContainer.MineList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MineList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.chunkmapper.protoc.MineContainer.MineListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.chunkmapper.protoc.MineContainer.MineList.class, com.chunkmapper.protoc.MineContainer.MineList.Builder.class);
      }

      // Construct using com.chunkmapper.protoc.MineContainer.MineList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMinesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (minesBuilder_ == null) {
          mines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          minesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.chunkmapper.protoc.MineContainer.internal_static_MineList_descriptor;
      }

      public com.chunkmapper.protoc.MineContainer.MineList getDefaultInstanceForType() {
        return com.chunkmapper.protoc.MineContainer.MineList.getDefaultInstance();
      }

      public com.chunkmapper.protoc.MineContainer.MineList build() {
        com.chunkmapper.protoc.MineContainer.MineList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.MineContainer.MineList buildPartial() {
        com.chunkmapper.protoc.MineContainer.MineList result = new com.chunkmapper.protoc.MineContainer.MineList(this);
        int from_bitField0_ = bitField0_;
        if (minesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            mines_ = java.util.Collections.unmodifiableList(mines_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mines_ = mines_;
        } else {
          result.mines_ = minesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.chunkmapper.protoc.MineContainer.MineList) {
          return mergeFrom((com.chunkmapper.protoc.MineContainer.MineList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.chunkmapper.protoc.MineContainer.MineList other) {
        if (other == com.chunkmapper.protoc.MineContainer.MineList.getDefaultInstance()) return this;
        if (minesBuilder_ == null) {
          if (!other.mines_.isEmpty()) {
            if (mines_.isEmpty()) {
              mines_ = other.mines_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMinesIsMutable();
              mines_.addAll(other.mines_);
            }
            onChanged();
          }
        } else {
          if (!other.mines_.isEmpty()) {
            if (minesBuilder_.isEmpty()) {
              minesBuilder_.dispose();
              minesBuilder_ = null;
              mines_ = other.mines_;
              bitField0_ = (bitField0_ & ~0x00000001);
              minesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMinesFieldBuilder() : null;
            } else {
              minesBuilder_.addAllMessages(other.mines_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMinesCount(); i++) {
          if (!getMines(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.MineContainer.MineList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.MineContainer.MineList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .MineInfo mines = 1;
      private java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo> mines_ =
        java.util.Collections.emptyList();
      private void ensureMinesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          mines_ = new java.util.ArrayList<com.chunkmapper.protoc.MineContainer.MineInfo>(mines_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.chunkmapper.protoc.MineContainer.MineInfo, com.chunkmapper.protoc.MineContainer.MineInfo.Builder, com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder> minesBuilder_;

      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo> getMinesList() {
        if (minesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mines_);
        } else {
          return minesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public int getMinesCount() {
        if (minesBuilder_ == null) {
          return mines_.size();
        } else {
          return minesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public com.chunkmapper.protoc.MineContainer.MineInfo getMines(int index) {
        if (minesBuilder_ == null) {
          return mines_.get(index);
        } else {
          return minesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder setMines(
          int index, com.chunkmapper.protoc.MineContainer.MineInfo value) {
        if (minesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMinesIsMutable();
          mines_.set(index, value);
          onChanged();
        } else {
          minesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder setMines(
          int index, com.chunkmapper.protoc.MineContainer.MineInfo.Builder builderForValue) {
        if (minesBuilder_ == null) {
          ensureMinesIsMutable();
          mines_.set(index, builderForValue.build());
          onChanged();
        } else {
          minesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder addMines(com.chunkmapper.protoc.MineContainer.MineInfo value) {
        if (minesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMinesIsMutable();
          mines_.add(value);
          onChanged();
        } else {
          minesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder addMines(
          int index, com.chunkmapper.protoc.MineContainer.MineInfo value) {
        if (minesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMinesIsMutable();
          mines_.add(index, value);
          onChanged();
        } else {
          minesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder addMines(
          com.chunkmapper.protoc.MineContainer.MineInfo.Builder builderForValue) {
        if (minesBuilder_ == null) {
          ensureMinesIsMutable();
          mines_.add(builderForValue.build());
          onChanged();
        } else {
          minesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder addMines(
          int index, com.chunkmapper.protoc.MineContainer.MineInfo.Builder builderForValue) {
        if (minesBuilder_ == null) {
          ensureMinesIsMutable();
          mines_.add(index, builderForValue.build());
          onChanged();
        } else {
          minesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder addAllMines(
          java.lang.Iterable<? extends com.chunkmapper.protoc.MineContainer.MineInfo> values) {
        if (minesBuilder_ == null) {
          ensureMinesIsMutable();
          super.addAll(values, mines_);
          onChanged();
        } else {
          minesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder clearMines() {
        if (minesBuilder_ == null) {
          mines_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          minesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public Builder removeMines(int index) {
        if (minesBuilder_ == null) {
          ensureMinesIsMutable();
          mines_.remove(index);
          onChanged();
        } else {
          minesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public com.chunkmapper.protoc.MineContainer.MineInfo.Builder getMinesBuilder(
          int index) {
        return getMinesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder getMinesOrBuilder(
          int index) {
        if (minesBuilder_ == null) {
          return mines_.get(index);  } else {
          return minesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public java.util.List<? extends com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder> 
           getMinesOrBuilderList() {
        if (minesBuilder_ != null) {
          return minesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mines_);
        }
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public com.chunkmapper.protoc.MineContainer.MineInfo.Builder addMinesBuilder() {
        return getMinesFieldBuilder().addBuilder(
            com.chunkmapper.protoc.MineContainer.MineInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public com.chunkmapper.protoc.MineContainer.MineInfo.Builder addMinesBuilder(
          int index) {
        return getMinesFieldBuilder().addBuilder(
            index, com.chunkmapper.protoc.MineContainer.MineInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MineInfo mines = 1;</code>
       */
      public java.util.List<com.chunkmapper.protoc.MineContainer.MineInfo.Builder> 
           getMinesBuilderList() {
        return getMinesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.chunkmapper.protoc.MineContainer.MineInfo, com.chunkmapper.protoc.MineContainer.MineInfo.Builder, com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder> 
          getMinesFieldBuilder() {
        if (minesBuilder_ == null) {
          minesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.chunkmapper.protoc.MineContainer.MineInfo, com.chunkmapper.protoc.MineContainer.MineInfo.Builder, com.chunkmapper.protoc.MineContainer.MineInfoOrBuilder>(
                  mines_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          mines_ = null;
        }
        return minesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MineList)
    }

    static {
      defaultInstance = new MineList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MineList)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MineInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MineInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MineList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MineList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*com/chunkmapper/protoc/MineContainer.p" +
      "roto\";\n\010MineInfo\022\014\n\004absx\030\001 \002(\005\022\014\n\004absz\030\002" +
      " \002(\005\022\023\n\013commodities\030\003 \003(\t\"$\n\010MineList\022\030\n" +
      "\005mines\030\001 \003(\0132\t.MineInfoB\030\n\026com.chunkmapp" +
      "er.protoc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MineInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MineInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MineInfo_descriptor,
              new java.lang.String[] { "Absx", "Absz", "Commodities", });
          internal_static_MineList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MineList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MineList_descriptor,
              new java.lang.String[] { "Mines", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
