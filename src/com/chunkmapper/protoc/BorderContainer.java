// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BorderContainer.proto

package com.chunkmapper.protoc;

public final class BorderContainer {
  private BorderContainer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BorderSectionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .Point points = 1;
    /**
     * <code>repeated .Point points = 1;</code>
     */
    java.util.List<com.chunkmapper.protoc.PointContainer.Point> 
        getPointsList();
    /**
     * <code>repeated .Point points = 1;</code>
     */
    com.chunkmapper.protoc.PointContainer.Point getPoints(int index);
    /**
     * <code>repeated .Point points = 1;</code>
     */
    int getPointsCount();

    // required .Rectangle bbox = 2;
    /**
     * <code>required .Rectangle bbox = 2;</code>
     */
    boolean hasBbox();
    /**
     * <code>required .Rectangle bbox = 2;</code>
     */
    com.chunkmapper.protoc.RectangleContainer.Rectangle getBbox();

    // required string left_area = 3;
    /**
     * <code>required string left_area = 3;</code>
     */
    boolean hasLeftArea();
    /**
     * <code>required string left_area = 3;</code>
     */
    java.lang.String getLeftArea();
    /**
     * <code>required string left_area = 3;</code>
     */
    com.google.protobuf.ByteString
        getLeftAreaBytes();

    // required string right_area = 4;
    /**
     * <code>required string right_area = 4;</code>
     */
    boolean hasRightArea();
    /**
     * <code>required string right_area = 4;</code>
     */
    java.lang.String getRightArea();
    /**
     * <code>required string right_area = 4;</code>
     */
    com.google.protobuf.ByteString
        getRightAreaBytes();
  }
  /**
   * Protobuf type {@code BorderSection}
   */
  public static final class BorderSection extends
      com.google.protobuf.GeneratedMessageLite
      implements BorderSectionOrBuilder {
    // Use BorderSection.newBuilder() to construct.
    private BorderSection(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BorderSection(boolean noInit) {}

    private static final BorderSection defaultInstance;
    public static BorderSection getDefaultInstance() {
      return defaultInstance;
    }

    public BorderSection getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BorderSection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                points_ = new java.util.ArrayList<com.chunkmapper.protoc.PointContainer.Point>();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.add(input.readMessage(com.chunkmapper.protoc.PointContainer.Point.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.chunkmapper.protoc.RectangleContainer.Rectangle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = bbox_.toBuilder();
              }
              bbox_ = input.readMessage(com.chunkmapper.protoc.RectangleContainer.Rectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bbox_);
                bbox_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              leftArea_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              rightArea_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BorderSection> PARSER =
        new com.google.protobuf.AbstractParser<BorderSection>() {
      public BorderSection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BorderSection(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BorderSection> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .Point points = 1;
    public static final int POINTS_FIELD_NUMBER = 1;
    private java.util.List<com.chunkmapper.protoc.PointContainer.Point> points_;
    /**
     * <code>repeated .Point points = 1;</code>
     */
    public java.util.List<com.chunkmapper.protoc.PointContainer.Point> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .Point points = 1;</code>
     */
    public java.util.List<? extends com.chunkmapper.protoc.PointContainer.PointOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .Point points = 1;</code>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .Point points = 1;</code>
     */
    public com.chunkmapper.protoc.PointContainer.Point getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .Point points = 1;</code>
     */
    public com.chunkmapper.protoc.PointContainer.PointOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    // required .Rectangle bbox = 2;
    public static final int BBOX_FIELD_NUMBER = 2;
    private com.chunkmapper.protoc.RectangleContainer.Rectangle bbox_;
    /**
     * <code>required .Rectangle bbox = 2;</code>
     */
    public boolean hasBbox() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Rectangle bbox = 2;</code>
     */
    public com.chunkmapper.protoc.RectangleContainer.Rectangle getBbox() {
      return bbox_;
    }

    // required string left_area = 3;
    public static final int LEFT_AREA_FIELD_NUMBER = 3;
    private java.lang.Object leftArea_;
    /**
     * <code>required string left_area = 3;</code>
     */
    public boolean hasLeftArea() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string left_area = 3;</code>
     */
    public java.lang.String getLeftArea() {
      java.lang.Object ref = leftArea_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          leftArea_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string left_area = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLeftAreaBytes() {
      java.lang.Object ref = leftArea_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        leftArea_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string right_area = 4;
    public static final int RIGHT_AREA_FIELD_NUMBER = 4;
    private java.lang.Object rightArea_;
    /**
     * <code>required string right_area = 4;</code>
     */
    public boolean hasRightArea() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string right_area = 4;</code>
     */
    public java.lang.String getRightArea() {
      java.lang.Object ref = rightArea_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rightArea_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string right_area = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRightAreaBytes() {
      java.lang.Object ref = rightArea_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rightArea_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      points_ = java.util.Collections.emptyList();
      bbox_ = com.chunkmapper.protoc.RectangleContainer.Rectangle.getDefaultInstance();
      leftArea_ = "";
      rightArea_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasBbox()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeftArea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightArea()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getBbox().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(1, points_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, bbox_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getLeftAreaBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getRightAreaBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, points_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, bbox_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLeftAreaBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRightAreaBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderSection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.BorderContainer.BorderSection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code BorderSection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.BorderContainer.BorderSection, Builder>
        implements com.chunkmapper.protoc.BorderContainer.BorderSectionOrBuilder {
      // Construct using com.chunkmapper.protoc.BorderContainer.BorderSection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        bbox_ = com.chunkmapper.protoc.RectangleContainer.Rectangle.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        leftArea_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        rightArea_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.BorderContainer.BorderSection getDefaultInstanceForType() {
        return com.chunkmapper.protoc.BorderContainer.BorderSection.getDefaultInstance();
      }

      public com.chunkmapper.protoc.BorderContainer.BorderSection build() {
        com.chunkmapper.protoc.BorderContainer.BorderSection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.BorderContainer.BorderSection buildPartial() {
        com.chunkmapper.protoc.BorderContainer.BorderSection result = new com.chunkmapper.protoc.BorderContainer.BorderSection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          points_ = java.util.Collections.unmodifiableList(points_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.points_ = points_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bbox_ = bbox_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leftArea_ = leftArea_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rightArea_ = rightArea_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.BorderContainer.BorderSection other) {
        if (other == com.chunkmapper.protoc.BorderContainer.BorderSection.getDefaultInstance()) return this;
        if (!other.points_.isEmpty()) {
          if (points_.isEmpty()) {
            points_ = other.points_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePointsIsMutable();
            points_.addAll(other.points_);
          }
          
        }
        if (other.hasBbox()) {
          mergeBbox(other.getBbox());
        }
        if (other.hasLeftArea()) {
          bitField0_ |= 0x00000004;
          leftArea_ = other.leftArea_;
          
        }
        if (other.hasRightArea()) {
          bitField0_ |= 0x00000008;
          rightArea_ = other.rightArea_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBbox()) {
          
          return false;
        }
        if (!hasLeftArea()) {
          
          return false;
        }
        if (!hasRightArea()) {
          
          return false;
        }
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getBbox().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.BorderContainer.BorderSection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.BorderContainer.BorderSection) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Point points = 1;
      private java.util.List<com.chunkmapper.protoc.PointContainer.Point> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          points_ = new java.util.ArrayList<com.chunkmapper.protoc.PointContainer.Point>(points_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .Point points = 1;</code>
       */
      public java.util.List<com.chunkmapper.protoc.PointContainer.Point> getPointsList() {
        return java.util.Collections.unmodifiableList(points_);
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public int getPointsCount() {
        return points_.size();
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public com.chunkmapper.protoc.PointContainer.Point getPoints(int index) {
        return points_.get(index);
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder setPoints(
          int index, com.chunkmapper.protoc.PointContainer.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder setPoints(
          int index, com.chunkmapper.protoc.PointContainer.Point.Builder builderForValue) {
        ensurePointsIsMutable();
        points_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder addPoints(com.chunkmapper.protoc.PointContainer.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.add(value);

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder addPoints(
          int index, com.chunkmapper.protoc.PointContainer.Point value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePointsIsMutable();
        points_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder addPoints(
          com.chunkmapper.protoc.PointContainer.Point.Builder builderForValue) {
        ensurePointsIsMutable();
        points_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder addPoints(
          int index, com.chunkmapper.protoc.PointContainer.Point.Builder builderForValue) {
        ensurePointsIsMutable();
        points_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends com.chunkmapper.protoc.PointContainer.Point> values) {
        ensurePointsIsMutable();
        super.addAll(values, points_);

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder clearPoints() {
        points_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .Point points = 1;</code>
       */
      public Builder removePoints(int index) {
        ensurePointsIsMutable();
        points_.remove(index);

        return this;
      }

      // required .Rectangle bbox = 2;
      private com.chunkmapper.protoc.RectangleContainer.Rectangle bbox_ = com.chunkmapper.protoc.RectangleContainer.Rectangle.getDefaultInstance();
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public boolean hasBbox() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public com.chunkmapper.protoc.RectangleContainer.Rectangle getBbox() {
        return bbox_;
      }
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public Builder setBbox(com.chunkmapper.protoc.RectangleContainer.Rectangle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bbox_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public Builder setBbox(
          com.chunkmapper.protoc.RectangleContainer.Rectangle.Builder builderForValue) {
        bbox_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public Builder mergeBbox(com.chunkmapper.protoc.RectangleContainer.Rectangle value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            bbox_ != com.chunkmapper.protoc.RectangleContainer.Rectangle.getDefaultInstance()) {
          bbox_ =
            com.chunkmapper.protoc.RectangleContainer.Rectangle.newBuilder(bbox_).mergeFrom(value).buildPartial();
        } else {
          bbox_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 2;</code>
       */
      public Builder clearBbox() {
        bbox_ = com.chunkmapper.protoc.RectangleContainer.Rectangle.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // required string left_area = 3;
      private java.lang.Object leftArea_ = "";
      /**
       * <code>required string left_area = 3;</code>
       */
      public boolean hasLeftArea() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string left_area = 3;</code>
       */
      public java.lang.String getLeftArea() {
        java.lang.Object ref = leftArea_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          leftArea_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string left_area = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLeftAreaBytes() {
        java.lang.Object ref = leftArea_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          leftArea_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string left_area = 3;</code>
       */
      public Builder setLeftArea(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        leftArea_ = value;
        
        return this;
      }
      /**
       * <code>required string left_area = 3;</code>
       */
      public Builder clearLeftArea() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftArea_ = getDefaultInstance().getLeftArea();
        
        return this;
      }
      /**
       * <code>required string left_area = 3;</code>
       */
      public Builder setLeftAreaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        leftArea_ = value;
        
        return this;
      }

      // required string right_area = 4;
      private java.lang.Object rightArea_ = "";
      /**
       * <code>required string right_area = 4;</code>
       */
      public boolean hasRightArea() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string right_area = 4;</code>
       */
      public java.lang.String getRightArea() {
        java.lang.Object ref = rightArea_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rightArea_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string right_area = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRightAreaBytes() {
        java.lang.Object ref = rightArea_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rightArea_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string right_area = 4;</code>
       */
      public Builder setRightArea(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rightArea_ = value;
        
        return this;
      }
      /**
       * <code>required string right_area = 4;</code>
       */
      public Builder clearRightArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rightArea_ = getDefaultInstance().getRightArea();
        
        return this;
      }
      /**
       * <code>required string right_area = 4;</code>
       */
      public Builder setRightAreaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rightArea_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BorderSection)
    }

    static {
      defaultInstance = new BorderSection(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BorderSection)
  }

  public interface BorderRegionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .BorderSection border_sections = 1;
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    java.util.List<com.chunkmapper.protoc.BorderContainer.BorderSection> 
        getBorderSectionsList();
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    com.chunkmapper.protoc.BorderContainer.BorderSection getBorderSections(int index);
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    int getBorderSectionsCount();
  }
  /**
   * Protobuf type {@code BorderRegion}
   */
  public static final class BorderRegion extends
      com.google.protobuf.GeneratedMessageLite
      implements BorderRegionOrBuilder {
    // Use BorderRegion.newBuilder() to construct.
    private BorderRegion(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BorderRegion(boolean noInit) {}

    private static final BorderRegion defaultInstance;
    public static BorderRegion getDefaultInstance() {
      return defaultInstance;
    }

    public BorderRegion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BorderRegion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                borderSections_ = new java.util.ArrayList<com.chunkmapper.protoc.BorderContainer.BorderSection>();
                mutable_bitField0_ |= 0x00000001;
              }
              borderSections_.add(input.readMessage(com.chunkmapper.protoc.BorderContainer.BorderSection.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          borderSections_ = java.util.Collections.unmodifiableList(borderSections_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BorderRegion> PARSER =
        new com.google.protobuf.AbstractParser<BorderRegion>() {
      public BorderRegion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BorderRegion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BorderRegion> getParserForType() {
      return PARSER;
    }

    // repeated .BorderSection border_sections = 1;
    public static final int BORDER_SECTIONS_FIELD_NUMBER = 1;
    private java.util.List<com.chunkmapper.protoc.BorderContainer.BorderSection> borderSections_;
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    public java.util.List<com.chunkmapper.protoc.BorderContainer.BorderSection> getBorderSectionsList() {
      return borderSections_;
    }
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    public java.util.List<? extends com.chunkmapper.protoc.BorderContainer.BorderSectionOrBuilder> 
        getBorderSectionsOrBuilderList() {
      return borderSections_;
    }
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    public int getBorderSectionsCount() {
      return borderSections_.size();
    }
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    public com.chunkmapper.protoc.BorderContainer.BorderSection getBorderSections(int index) {
      return borderSections_.get(index);
    }
    /**
     * <code>repeated .BorderSection border_sections = 1;</code>
     */
    public com.chunkmapper.protoc.BorderContainer.BorderSectionOrBuilder getBorderSectionsOrBuilder(
        int index) {
      return borderSections_.get(index);
    }

    private void initFields() {
      borderSections_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getBorderSectionsCount(); i++) {
        if (!getBorderSections(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < borderSections_.size(); i++) {
        output.writeMessage(1, borderSections_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < borderSections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, borderSections_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.BorderContainer.BorderRegion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.BorderContainer.BorderRegion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code BorderRegion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.BorderContainer.BorderRegion, Builder>
        implements com.chunkmapper.protoc.BorderContainer.BorderRegionOrBuilder {
      // Construct using com.chunkmapper.protoc.BorderContainer.BorderRegion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        borderSections_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.BorderContainer.BorderRegion getDefaultInstanceForType() {
        return com.chunkmapper.protoc.BorderContainer.BorderRegion.getDefaultInstance();
      }

      public com.chunkmapper.protoc.BorderContainer.BorderRegion build() {
        com.chunkmapper.protoc.BorderContainer.BorderRegion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.BorderContainer.BorderRegion buildPartial() {
        com.chunkmapper.protoc.BorderContainer.BorderRegion result = new com.chunkmapper.protoc.BorderContainer.BorderRegion(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          borderSections_ = java.util.Collections.unmodifiableList(borderSections_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.borderSections_ = borderSections_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.BorderContainer.BorderRegion other) {
        if (other == com.chunkmapper.protoc.BorderContainer.BorderRegion.getDefaultInstance()) return this;
        if (!other.borderSections_.isEmpty()) {
          if (borderSections_.isEmpty()) {
            borderSections_ = other.borderSections_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBorderSectionsIsMutable();
            borderSections_.addAll(other.borderSections_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getBorderSectionsCount(); i++) {
          if (!getBorderSections(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.BorderContainer.BorderRegion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.BorderContainer.BorderRegion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .BorderSection border_sections = 1;
      private java.util.List<com.chunkmapper.protoc.BorderContainer.BorderSection> borderSections_ =
        java.util.Collections.emptyList();
      private void ensureBorderSectionsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          borderSections_ = new java.util.ArrayList<com.chunkmapper.protoc.BorderContainer.BorderSection>(borderSections_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public java.util.List<com.chunkmapper.protoc.BorderContainer.BorderSection> getBorderSectionsList() {
        return java.util.Collections.unmodifiableList(borderSections_);
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public int getBorderSectionsCount() {
        return borderSections_.size();
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public com.chunkmapper.protoc.BorderContainer.BorderSection getBorderSections(int index) {
        return borderSections_.get(index);
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder setBorderSections(
          int index, com.chunkmapper.protoc.BorderContainer.BorderSection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBorderSectionsIsMutable();
        borderSections_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder setBorderSections(
          int index, com.chunkmapper.protoc.BorderContainer.BorderSection.Builder builderForValue) {
        ensureBorderSectionsIsMutable();
        borderSections_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder addBorderSections(com.chunkmapper.protoc.BorderContainer.BorderSection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBorderSectionsIsMutable();
        borderSections_.add(value);

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder addBorderSections(
          int index, com.chunkmapper.protoc.BorderContainer.BorderSection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBorderSectionsIsMutable();
        borderSections_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder addBorderSections(
          com.chunkmapper.protoc.BorderContainer.BorderSection.Builder builderForValue) {
        ensureBorderSectionsIsMutable();
        borderSections_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder addBorderSections(
          int index, com.chunkmapper.protoc.BorderContainer.BorderSection.Builder builderForValue) {
        ensureBorderSectionsIsMutable();
        borderSections_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder addAllBorderSections(
          java.lang.Iterable<? extends com.chunkmapper.protoc.BorderContainer.BorderSection> values) {
        ensureBorderSectionsIsMutable();
        super.addAll(values, borderSections_);

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder clearBorderSections() {
        borderSections_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .BorderSection border_sections = 1;</code>
       */
      public Builder removeBorderSections(int index) {
        ensureBorderSectionsIsMutable();
        borderSections_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:BorderRegion)
    }

    static {
      defaultInstance = new BorderRegion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BorderRegion)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
