// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OSMContainer.proto

package com.chunkmapper.protoc;

public final class OSMContainer {
  private OSMContainer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface RectangleOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 x = 1;
    /**
     * <code>required int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 1;</code>
     */
    int getX();

    // required int32 z = 2;
    /**
     * <code>required int32 z = 2;</code>
     */
    boolean hasZ();
    /**
     * <code>required int32 z = 2;</code>
     */
    int getZ();

    // required int32 width = 3;
    /**
     * <code>required int32 width = 3;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 width = 3;</code>
     */
    int getWidth();

    // required int32 height = 4;
    /**
     * <code>required int32 height = 4;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 4;</code>
     */
    int getHeight();
  }
  /**
   * Protobuf type {@code Rectangle}
   */
  public static final class Rectangle extends
      com.google.protobuf.GeneratedMessageLite
      implements RectangleOrBuilder {
    // Use Rectangle.newBuilder() to construct.
    private Rectangle(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Rectangle(boolean noInit) {}

    private static final Rectangle defaultInstance;
    public static Rectangle getDefaultInstance() {
      return defaultInstance;
    }

    public Rectangle getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Rectangle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              z_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              width_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Rectangle> PARSER =
        new com.google.protobuf.AbstractParser<Rectangle>() {
      public Rectangle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rectangle(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Rectangle> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    // required int32 z = 2;
    public static final int Z_FIELD_NUMBER = 2;
    private int z_;
    /**
     * <code>required int32 z = 2;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 z = 2;</code>
     */
    public int getZ() {
      return z_;
    }

    // required int32 width = 3;
    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_;
    /**
     * <code>required int32 width = 3;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 width = 3;</code>
     */
    public int getWidth() {
      return width_;
    }

    // required int32 height = 4;
    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <code>required int32 height = 4;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 height = 4;</code>
     */
    public int getHeight() {
      return height_;
    }

    private void initFields() {
      x_ = 0;
      z_ = 0;
      width_ = 0;
      height_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, z_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, z_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.OSMContainer.Rectangle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Rectangle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.OSMContainer.Rectangle, Builder>
        implements com.chunkmapper.protoc.OSMContainer.RectangleOrBuilder {
      // Construct using com.chunkmapper.protoc.OSMContainer.Rectangle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        z_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.OSMContainer.Rectangle getDefaultInstanceForType() {
        return com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance();
      }

      public com.chunkmapper.protoc.OSMContainer.Rectangle build() {
        com.chunkmapper.protoc.OSMContainer.Rectangle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.OSMContainer.Rectangle buildPartial() {
        com.chunkmapper.protoc.OSMContainer.Rectangle result = new com.chunkmapper.protoc.OSMContainer.Rectangle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.z_ = z_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.OSMContainer.Rectangle other) {
        if (other == com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.OSMContainer.Rectangle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.OSMContainer.Rectangle) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 x = 1;
      private int x_ ;
      /**
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        
        return this;
      }

      // required int32 z = 2;
      private int z_ ;
      /**
       * <code>required int32 z = 2;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public int getZ() {
        return z_;
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public Builder setZ(int value) {
        bitField0_ |= 0x00000002;
        z_ = value;
        
        return this;
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0;
        
        return this;
      }

      // required int32 width = 3;
      private int width_ ;
      /**
       * <code>required int32 width = 3;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 width = 3;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 width = 3;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000004;
        width_ = value;
        
        return this;
      }
      /**
       * <code>required int32 width = 3;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0;
        
        return this;
      }

      // required int32 height = 4;
      private int height_ ;
      /**
       * <code>required int32 height = 4;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 height = 4;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 4;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        
        return this;
      }
      /**
       * <code>required int32 height = 4;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Rectangle)
    }

    static {
      defaultInstance = new Rectangle(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Rectangle)
  }

  public interface NodeOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 x = 1;
    /**
     * <code>required int32 x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 x = 1;</code>
     */
    int getX();

    // required int32 z = 2;
    /**
     * <code>required int32 z = 2;</code>
     */
    boolean hasZ();
    /**
     * <code>required int32 z = 2;</code>
     */
    int getZ();

    // repeated string keys = 3;
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.util.List<java.lang.String>
    getKeysList();
    /**
     * <code>repeated string keys = 3;</code>
     */
    int getKeysCount();
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.lang.String getKeys(int index);
    /**
     * <code>repeated string keys = 3;</code>
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);

    // repeated string vals = 4;
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.util.List<java.lang.String>
    getValsList();
    /**
     * <code>repeated string vals = 4;</code>
     */
    int getValsCount();
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.lang.String getVals(int index);
    /**
     * <code>repeated string vals = 4;</code>
     */
    com.google.protobuf.ByteString
        getValsBytes(int index);

    // required int64 id = 5;
    /**
     * <code>required int64 id = 5;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 5;</code>
     */
    long getId();
  }
  /**
   * Protobuf type {@code Node}
   */
  public static final class Node extends
      com.google.protobuf.GeneratedMessageLite
      implements NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Node(boolean noInit) {}

    private static final Node defaultInstance;
    public static Node getDefaultInstance() {
      return defaultInstance;
    }

    public Node getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              z_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                keys_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              keys_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                vals_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              vals_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              id_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(keys_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(vals_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Node> PARSER =
        new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 x = 1;</code>
     */
    public int getX() {
      return x_;
    }

    // required int32 z = 2;
    public static final int Z_FIELD_NUMBER = 2;
    private int z_;
    /**
     * <code>required int32 z = 2;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 z = 2;</code>
     */
    public int getZ() {
      return z_;
    }

    // repeated string keys = 3;
    public static final int KEYS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.util.List<java.lang.String>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    // repeated string vals = 4;
    public static final int VALS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList vals_;
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.util.List<java.lang.String>
        getValsList() {
      return vals_;
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.lang.String getVals(int index) {
      return vals_.get(index);
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValsBytes(int index) {
      return vals_.getByteString(index);
    }

    // required int64 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private long id_;
    /**
     * <code>required int64 id = 5;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 id = 5;</code>
     */
    public long getId() {
      return id_;
    }

    private void initFields() {
      x_ = 0;
      z_ = 0;
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      id_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, z_);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeBytes(3, keys_.getByteString(i));
      }
      for (int i = 0; i < vals_.size(); i++) {
        output.writeBytes(4, vals_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, z_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(keys_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vals_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(vals_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.OSMContainer.Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.OSMContainer.Node, Builder>
        implements com.chunkmapper.protoc.OSMContainer.NodeOrBuilder {
      // Construct using com.chunkmapper.protoc.OSMContainer.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        z_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.OSMContainer.Node getDefaultInstanceForType() {
        return com.chunkmapper.protoc.OSMContainer.Node.getDefaultInstance();
      }

      public com.chunkmapper.protoc.OSMContainer.Node build() {
        com.chunkmapper.protoc.OSMContainer.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.OSMContainer.Node buildPartial() {
        com.chunkmapper.protoc.OSMContainer.Node result = new com.chunkmapper.protoc.OSMContainer.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.z_ = z_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(
              keys_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.keys_ = keys_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(
              vals_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.vals_ = vals_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.OSMContainer.Node other) {
        if (other == com.chunkmapper.protoc.OSMContainer.Node.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          
        }
        if (!other.vals_.isEmpty()) {
          if (vals_.isEmpty()) {
            vals_ = other.vals_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValsIsMutable();
            vals_.addAll(other.vals_);
          }
          
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.OSMContainer.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.OSMContainer.Node) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 x = 1;
      private int x_ ;
      /**
       * <code>required int32 x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required int32 x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        
        return this;
      }

      // required int32 z = 2;
      private int z_ ;
      /**
       * <code>required int32 z = 2;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public int getZ() {
        return z_;
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public Builder setZ(int value) {
        bitField0_ |= 0x00000002;
        z_ = value;
        
        return this;
      }
      /**
       * <code>required int32 z = 2;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0;
        
        return this;
      }

      // repeated string keys = 3;
      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.util.List<java.lang.String>
          getKeysList() {
        return java.util.Collections.unmodifiableList(keys_);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        super.addAll(values, keys_);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }

      // repeated string vals = 4;
      private com.google.protobuf.LazyStringList vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.LazyStringArrayList(vals_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.util.List<java.lang.String>
          getValsList() {
        return java.util.Collections.unmodifiableList(vals_);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public int getValsCount() {
        return vals_.size();
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.lang.String getVals(int index) {
        return vals_.get(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValsBytes(int index) {
        return vals_.getByteString(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder setVals(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addVals(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addAllVals(
          java.lang.Iterable<java.lang.String> values) {
        ensureValsIsMutable();
        super.addAll(values, vals_);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder clearVals() {
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addValsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }

      // required int64 id = 5;
      private long id_ ;
      /**
       * <code>required int64 id = 5;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000010;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Node)
    }

    static {
      defaultInstance = new Node(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Node)
  }

  public interface WayOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated int32 xs = 1 [packed = true];
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getXsList();
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    int getXsCount();
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    int getXs(int index);

    // repeated int32 zs = 2 [packed = true];
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getZsList();
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    int getZsCount();
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    int getZs(int index);

    // repeated string keys = 3;
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.util.List<java.lang.String>
    getKeysList();
    /**
     * <code>repeated string keys = 3;</code>
     */
    int getKeysCount();
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.lang.String getKeys(int index);
    /**
     * <code>repeated string keys = 3;</code>
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);

    // repeated string vals = 4;
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.util.List<java.lang.String>
    getValsList();
    /**
     * <code>repeated string vals = 4;</code>
     */
    int getValsCount();
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.lang.String getVals(int index);
    /**
     * <code>repeated string vals = 4;</code>
     */
    com.google.protobuf.ByteString
        getValsBytes(int index);

    // required int64 id = 5;
    /**
     * <code>required int64 id = 5;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 5;</code>
     */
    long getId();

    // required .Rectangle bbox = 6;
    /**
     * <code>required .Rectangle bbox = 6;</code>
     */
    boolean hasBbox();
    /**
     * <code>required .Rectangle bbox = 6;</code>
     */
    com.chunkmapper.protoc.OSMContainer.Rectangle getBbox();
  }
  /**
   * Protobuf type {@code Way}
   */
  public static final class Way extends
      com.google.protobuf.GeneratedMessageLite
      implements WayOrBuilder {
    // Use Way.newBuilder() to construct.
    private Way(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Way(boolean noInit) {}

    private static final Way defaultInstance;
    public static Way getDefaultInstance() {
      return defaultInstance;
    }

    public Way getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Way(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                xs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              xs_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                xs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                xs_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                zs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              zs_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                zs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                zs_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                keys_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              keys_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                vals_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              vals_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 50: {
              com.chunkmapper.protoc.OSMContainer.Rectangle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = bbox_.toBuilder();
              }
              bbox_ = input.readMessage(com.chunkmapper.protoc.OSMContainer.Rectangle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bbox_);
                bbox_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          xs_ = java.util.Collections.unmodifiableList(xs_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          zs_ = java.util.Collections.unmodifiableList(zs_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(keys_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(vals_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Way> PARSER =
        new com.google.protobuf.AbstractParser<Way>() {
      public Way parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Way(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Way> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 xs = 1 [packed = true];
    public static final int XS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> xs_;
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getXsList() {
      return xs_;
    }
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    public int getXsCount() {
      return xs_.size();
    }
    /**
     * <code>repeated int32 xs = 1 [packed = true];</code>
     */
    public int getXs(int index) {
      return xs_.get(index);
    }
    private int xsMemoizedSerializedSize = -1;

    // repeated int32 zs = 2 [packed = true];
    public static final int ZS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> zs_;
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getZsList() {
      return zs_;
    }
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    public int getZsCount() {
      return zs_.size();
    }
    /**
     * <code>repeated int32 zs = 2 [packed = true];</code>
     */
    public int getZs(int index) {
      return zs_.get(index);
    }
    private int zsMemoizedSerializedSize = -1;

    // repeated string keys = 3;
    public static final int KEYS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.util.List<java.lang.String>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    // repeated string vals = 4;
    public static final int VALS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList vals_;
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.util.List<java.lang.String>
        getValsList() {
      return vals_;
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.lang.String getVals(int index) {
      return vals_.get(index);
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValsBytes(int index) {
      return vals_.getByteString(index);
    }

    // required int64 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private long id_;
    /**
     * <code>required int64 id = 5;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 5;</code>
     */
    public long getId() {
      return id_;
    }

    // required .Rectangle bbox = 6;
    public static final int BBOX_FIELD_NUMBER = 6;
    private com.chunkmapper.protoc.OSMContainer.Rectangle bbox_;
    /**
     * <code>required .Rectangle bbox = 6;</code>
     */
    public boolean hasBbox() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Rectangle bbox = 6;</code>
     */
    public com.chunkmapper.protoc.OSMContainer.Rectangle getBbox() {
      return bbox_;
    }

    private void initFields() {
      xs_ = java.util.Collections.emptyList();
      zs_ = java.util.Collections.emptyList();
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      id_ = 0L;
      bbox_ = com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBbox()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBbox().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getXsList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(xsMemoizedSerializedSize);
      }
      for (int i = 0; i < xs_.size(); i++) {
        output.writeInt32NoTag(xs_.get(i));
      }
      if (getZsList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(zsMemoizedSerializedSize);
      }
      for (int i = 0; i < zs_.size(); i++) {
        output.writeInt32NoTag(zs_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeBytes(3, keys_.getByteString(i));
      }
      for (int i = 0; i < vals_.size(); i++) {
        output.writeBytes(4, vals_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(5, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(6, bbox_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < xs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xs_.get(i));
        }
        size += dataSize;
        if (!getXsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        xsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zs_.get(i));
        }
        size += dataSize;
        if (!getZsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        zsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(keys_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vals_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(vals_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, bbox_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Way parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.OSMContainer.Way prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Way}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.OSMContainer.Way, Builder>
        implements com.chunkmapper.protoc.OSMContainer.WayOrBuilder {
      // Construct using com.chunkmapper.protoc.OSMContainer.Way.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        xs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        zs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        bbox_ = com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.OSMContainer.Way getDefaultInstanceForType() {
        return com.chunkmapper.protoc.OSMContainer.Way.getDefaultInstance();
      }

      public com.chunkmapper.protoc.OSMContainer.Way build() {
        com.chunkmapper.protoc.OSMContainer.Way result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.OSMContainer.Way buildPartial() {
        com.chunkmapper.protoc.OSMContainer.Way result = new com.chunkmapper.protoc.OSMContainer.Way(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          xs_ = java.util.Collections.unmodifiableList(xs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.xs_ = xs_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          zs_ = java.util.Collections.unmodifiableList(zs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.zs_ = zs_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(
              keys_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.keys_ = keys_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(
              vals_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.vals_ = vals_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bbox_ = bbox_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.OSMContainer.Way other) {
        if (other == com.chunkmapper.protoc.OSMContainer.Way.getDefaultInstance()) return this;
        if (!other.xs_.isEmpty()) {
          if (xs_.isEmpty()) {
            xs_ = other.xs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureXsIsMutable();
            xs_.addAll(other.xs_);
          }
          
        }
        if (!other.zs_.isEmpty()) {
          if (zs_.isEmpty()) {
            zs_ = other.zs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureZsIsMutable();
            zs_.addAll(other.zs_);
          }
          
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          
        }
        if (!other.vals_.isEmpty()) {
          if (vals_.isEmpty()) {
            vals_ = other.vals_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValsIsMutable();
            vals_.addAll(other.vals_);
          }
          
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasBbox()) {
          mergeBbox(other.getBbox());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasBbox()) {
          
          return false;
        }
        if (!getBbox().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.OSMContainer.Way parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.OSMContainer.Way) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 xs = 1 [packed = true];
      private java.util.List<java.lang.Integer> xs_ = java.util.Collections.emptyList();
      private void ensureXsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          xs_ = new java.util.ArrayList<java.lang.Integer>(xs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getXsList() {
        return java.util.Collections.unmodifiableList(xs_);
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public int getXsCount() {
        return xs_.size();
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public int getXs(int index) {
        return xs_.get(index);
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public Builder setXs(
          int index, int value) {
        ensureXsIsMutable();
        xs_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public Builder addXs(int value) {
        ensureXsIsMutable();
        xs_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public Builder addAllXs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXsIsMutable();
        super.addAll(values, xs_);
        
        return this;
      }
      /**
       * <code>repeated int32 xs = 1 [packed = true];</code>
       */
      public Builder clearXs() {
        xs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      // repeated int32 zs = 2 [packed = true];
      private java.util.List<java.lang.Integer> zs_ = java.util.Collections.emptyList();
      private void ensureZsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          zs_ = new java.util.ArrayList<java.lang.Integer>(zs_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getZsList() {
        return java.util.Collections.unmodifiableList(zs_);
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public int getZsCount() {
        return zs_.size();
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public int getZs(int index) {
        return zs_.get(index);
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public Builder setZs(
          int index, int value) {
        ensureZsIsMutable();
        zs_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public Builder addZs(int value) {
        ensureZsIsMutable();
        zs_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public Builder addAllZs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZsIsMutable();
        super.addAll(values, zs_);
        
        return this;
      }
      /**
       * <code>repeated int32 zs = 2 [packed = true];</code>
       */
      public Builder clearZs() {
        zs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }

      // repeated string keys = 3;
      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.util.List<java.lang.String>
          getKeysList() {
        return java.util.Collections.unmodifiableList(keys_);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        super.addAll(values, keys_);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }

      // repeated string vals = 4;
      private com.google.protobuf.LazyStringList vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.LazyStringArrayList(vals_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.util.List<java.lang.String>
          getValsList() {
        return java.util.Collections.unmodifiableList(vals_);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public int getValsCount() {
        return vals_.size();
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.lang.String getVals(int index) {
        return vals_.get(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValsBytes(int index) {
        return vals_.getByteString(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder setVals(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addVals(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addAllVals(
          java.lang.Iterable<java.lang.String> values) {
        ensureValsIsMutable();
        super.addAll(values, vals_);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder clearVals() {
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addValsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }

      // required int64 id = 5;
      private long id_ ;
      /**
       * <code>required int64 id = 5;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000010;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0L;
        
        return this;
      }

      // required .Rectangle bbox = 6;
      private com.chunkmapper.protoc.OSMContainer.Rectangle bbox_ = com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance();
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public boolean hasBbox() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public com.chunkmapper.protoc.OSMContainer.Rectangle getBbox() {
        return bbox_;
      }
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public Builder setBbox(com.chunkmapper.protoc.OSMContainer.Rectangle value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bbox_ = value;

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public Builder setBbox(
          com.chunkmapper.protoc.OSMContainer.Rectangle.Builder builderForValue) {
        bbox_ = builderForValue.build();

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public Builder mergeBbox(com.chunkmapper.protoc.OSMContainer.Rectangle value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            bbox_ != com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance()) {
          bbox_ =
            com.chunkmapper.protoc.OSMContainer.Rectangle.newBuilder(bbox_).mergeFrom(value).buildPartial();
        } else {
          bbox_ = value;
        }

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .Rectangle bbox = 6;</code>
       */
      public Builder clearBbox() {
        bbox_ = com.chunkmapper.protoc.OSMContainer.Rectangle.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Way)
    }

    static {
      defaultInstance = new Way(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Way)
  }

  public interface RelationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated int64 ways = 1;
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    java.util.List<java.lang.Long> getWaysList();
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    int getWaysCount();
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    long getWays(int index);

    // repeated string roles = 2;
    /**
     * <code>repeated string roles = 2;</code>
     */
    java.util.List<java.lang.String>
    getRolesList();
    /**
     * <code>repeated string roles = 2;</code>
     */
    int getRolesCount();
    /**
     * <code>repeated string roles = 2;</code>
     */
    java.lang.String getRoles(int index);
    /**
     * <code>repeated string roles = 2;</code>
     */
    com.google.protobuf.ByteString
        getRolesBytes(int index);

    // repeated string keys = 3;
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.util.List<java.lang.String>
    getKeysList();
    /**
     * <code>repeated string keys = 3;</code>
     */
    int getKeysCount();
    /**
     * <code>repeated string keys = 3;</code>
     */
    java.lang.String getKeys(int index);
    /**
     * <code>repeated string keys = 3;</code>
     */
    com.google.protobuf.ByteString
        getKeysBytes(int index);

    // repeated string vals = 4;
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.util.List<java.lang.String>
    getValsList();
    /**
     * <code>repeated string vals = 4;</code>
     */
    int getValsCount();
    /**
     * <code>repeated string vals = 4;</code>
     */
    java.lang.String getVals(int index);
    /**
     * <code>repeated string vals = 4;</code>
     */
    com.google.protobuf.ByteString
        getValsBytes(int index);

    // required int64 id = 5;
    /**
     * <code>required int64 id = 5;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 5;</code>
     */
    long getId();
  }
  /**
   * Protobuf type {@code Relation}
   */
  public static final class Relation extends
      com.google.protobuf.GeneratedMessageLite
      implements RelationOrBuilder {
    // Use Relation.newBuilder() to construct.
    private Relation(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Relation(boolean noInit) {}

    private static final Relation defaultInstance;
    public static Relation getDefaultInstance() {
      return defaultInstance;
    }

    public Relation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Relation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ways_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              ways_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                ways_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                ways_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                roles_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              roles_.add(input.readBytes());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                keys_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              keys_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                vals_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              vals_.add(input.readBytes());
              break;
            }
            case 40: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ways_ = java.util.Collections.unmodifiableList(ways_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          roles_ = new com.google.protobuf.UnmodifiableLazyStringList(roles_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(keys_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(vals_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Relation> PARSER =
        new com.google.protobuf.AbstractParser<Relation>() {
      public Relation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Relation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Relation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int64 ways = 1;
    public static final int WAYS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> ways_;
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getWaysList() {
      return ways_;
    }
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    public int getWaysCount() {
      return ways_.size();
    }
    /**
     * <code>repeated int64 ways = 1;</code>
     */
    public long getWays(int index) {
      return ways_.get(index);
    }

    // repeated string roles = 2;
    public static final int ROLES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList roles_;
    /**
     * <code>repeated string roles = 2;</code>
     */
    public java.util.List<java.lang.String>
        getRolesList() {
      return roles_;
    }
    /**
     * <code>repeated string roles = 2;</code>
     */
    public int getRolesCount() {
      return roles_.size();
    }
    /**
     * <code>repeated string roles = 2;</code>
     */
    public java.lang.String getRoles(int index) {
      return roles_.get(index);
    }
    /**
     * <code>repeated string roles = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRolesBytes(int index) {
      return roles_.getByteString(index);
    }

    // repeated string keys = 3;
    public static final int KEYS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList keys_;
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.util.List<java.lang.String>
        getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public java.lang.String getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated string keys = 3;</code>
     */
    public com.google.protobuf.ByteString
        getKeysBytes(int index) {
      return keys_.getByteString(index);
    }

    // repeated string vals = 4;
    public static final int VALS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList vals_;
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.util.List<java.lang.String>
        getValsList() {
      return vals_;
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public java.lang.String getVals(int index) {
      return vals_.get(index);
    }
    /**
     * <code>repeated string vals = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValsBytes(int index) {
      return vals_.getByteString(index);
    }

    // required int64 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private long id_;
    /**
     * <code>required int64 id = 5;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 5;</code>
     */
    public long getId() {
      return id_;
    }

    private void initFields() {
      ways_ = java.util.Collections.emptyList();
      roles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      id_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ways_.size(); i++) {
        output.writeInt64(1, ways_.get(i));
      }
      for (int i = 0; i < roles_.size(); i++) {
        output.writeBytes(2, roles_.getByteString(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeBytes(3, keys_.getByteString(i));
      }
      for (int i = 0; i < vals_.size(); i++) {
        output.writeBytes(4, vals_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(5, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ways_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(ways_.get(i));
        }
        size += dataSize;
        size += 1 * getWaysList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roles_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(roles_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRolesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(keys_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vals_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(vals_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.chunkmapper.protoc.OSMContainer.Relation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.chunkmapper.protoc.OSMContainer.Relation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Relation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.chunkmapper.protoc.OSMContainer.Relation, Builder>
        implements com.chunkmapper.protoc.OSMContainer.RelationOrBuilder {
      // Construct using com.chunkmapper.protoc.OSMContainer.Relation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ways_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        roles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.chunkmapper.protoc.OSMContainer.Relation getDefaultInstanceForType() {
        return com.chunkmapper.protoc.OSMContainer.Relation.getDefaultInstance();
      }

      public com.chunkmapper.protoc.OSMContainer.Relation build() {
        com.chunkmapper.protoc.OSMContainer.Relation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.chunkmapper.protoc.OSMContainer.Relation buildPartial() {
        com.chunkmapper.protoc.OSMContainer.Relation result = new com.chunkmapper.protoc.OSMContainer.Relation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ways_ = java.util.Collections.unmodifiableList(ways_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ways_ = ways_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          roles_ = new com.google.protobuf.UnmodifiableLazyStringList(
              roles_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.roles_ = roles_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.UnmodifiableLazyStringList(
              keys_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.keys_ = keys_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.UnmodifiableLazyStringList(
              vals_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.vals_ = vals_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.chunkmapper.protoc.OSMContainer.Relation other) {
        if (other == com.chunkmapper.protoc.OSMContainer.Relation.getDefaultInstance()) return this;
        if (!other.ways_.isEmpty()) {
          if (ways_.isEmpty()) {
            ways_ = other.ways_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWaysIsMutable();
            ways_.addAll(other.ways_);
          }
          
        }
        if (!other.roles_.isEmpty()) {
          if (roles_.isEmpty()) {
            roles_ = other.roles_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRolesIsMutable();
            roles_.addAll(other.roles_);
          }
          
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          
        }
        if (!other.vals_.isEmpty()) {
          if (vals_.isEmpty()) {
            vals_ = other.vals_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValsIsMutable();
            vals_.addAll(other.vals_);
          }
          
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.chunkmapper.protoc.OSMContainer.Relation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.chunkmapper.protoc.OSMContainer.Relation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int64 ways = 1;
      private java.util.List<java.lang.Long> ways_ = java.util.Collections.emptyList();
      private void ensureWaysIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ways_ = new java.util.ArrayList<java.lang.Long>(ways_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getWaysList() {
        return java.util.Collections.unmodifiableList(ways_);
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public int getWaysCount() {
        return ways_.size();
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public long getWays(int index) {
        return ways_.get(index);
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public Builder setWays(
          int index, long value) {
        ensureWaysIsMutable();
        ways_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public Builder addWays(long value) {
        ensureWaysIsMutable();
        ways_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public Builder addAllWays(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureWaysIsMutable();
        super.addAll(values, ways_);
        
        return this;
      }
      /**
       * <code>repeated int64 ways = 1;</code>
       */
      public Builder clearWays() {
        ways_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      // repeated string roles = 2;
      private com.google.protobuf.LazyStringList roles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRolesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          roles_ = new com.google.protobuf.LazyStringArrayList(roles_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public java.util.List<java.lang.String>
          getRolesList() {
        return java.util.Collections.unmodifiableList(roles_);
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public int getRolesCount() {
        return roles_.size();
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public java.lang.String getRoles(int index) {
        return roles_.get(index);
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRolesBytes(int index) {
        return roles_.getByteString(index);
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public Builder setRoles(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRolesIsMutable();
        roles_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public Builder addRoles(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRolesIsMutable();
        roles_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public Builder addAllRoles(
          java.lang.Iterable<java.lang.String> values) {
        ensureRolesIsMutable();
        super.addAll(values, roles_);
        
        return this;
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public Builder clearRoles() {
        roles_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      /**
       * <code>repeated string roles = 2;</code>
       */
      public Builder addRolesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRolesIsMutable();
        roles_.add(value);
        
        return this;
      }

      // repeated string keys = 3;
      private com.google.protobuf.LazyStringList keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.util.List<java.lang.String>
          getKeysList() {
        return java.util.Collections.unmodifiableList(keys_);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public java.lang.String getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKeysBytes(int index) {
        return keys_.getByteString(index);
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder setKeys(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeys(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeysIsMutable();
        super.addAll(values, keys_);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder clearKeys() {
        keys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      /**
       * <code>repeated string keys = 3;</code>
       */
      public Builder addKeysBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        
        return this;
      }

      // repeated string vals = 4;
      private com.google.protobuf.LazyStringList vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          vals_ = new com.google.protobuf.LazyStringArrayList(vals_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.util.List<java.lang.String>
          getValsList() {
        return java.util.Collections.unmodifiableList(vals_);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public int getValsCount() {
        return vals_.size();
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public java.lang.String getVals(int index) {
        return vals_.get(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValsBytes(int index) {
        return vals_.getByteString(index);
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder setVals(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addVals(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addAllVals(
          java.lang.Iterable<java.lang.String> values) {
        ensureValsIsMutable();
        super.addAll(values, vals_);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder clearVals() {
        vals_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      /**
       * <code>repeated string vals = 4;</code>
       */
      public Builder addValsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValsIsMutable();
        vals_.add(value);
        
        return this;
      }

      // required int64 id = 5;
      private long id_ ;
      /**
       * <code>required int64 id = 5;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000010;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 5;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Relation)
    }

    static {
      defaultInstance = new Relation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Relation)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
